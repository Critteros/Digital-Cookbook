name: javaflavors

x-pg-db-credentials: &pg-db-credentials
  POSTGRES_USER: ${DB_USER:-postgres}
  POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}

x-db-front-credentials: &db-front-credentials
  DB_FRONT_NAME: ${DB_FRONT_NAME:-device-manager-front}
  DB_FRONT_USER: ${DB_FRONT_USER:-device-manager-front}
  DB_FRONT_PASSWORD: ${DB_FRONT_PASSWORD:-device-manager-front}

x-db-api-credentials: &db-api-credentials
  DB_API_NAME: ${DB_API_NAME:-device-manager-api}
  DB_API_USER: ${DB_API_USER:-device-manager-api}
  DB_API_PASSWORD: ${DB_API_PASSWORD:-device-manager-api}

x-oidc-settings: &oidc-settings
  OIDC_AUTHORIZE_URL: ${OIDC_AUTHORIZE_URL}
  OIDC_TOKEN_URL: ${OIDC_TOKEN_URL}
  OIDC_CLIENT_ID: ${OIDC_CLIENT_ID}
  OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
  OIDC_ISSUER_URI: ${OIDC_ISSUER_URI}
  OIDC_JWKS_URI: ${OIDC_JWKS_URI}

x-web-server-settings: &web-server-settings
  DB_USER: ${DB_FRONT_USER:-device-manager-front}
  DB_PASSWORD: ${DB_FRONT_PASSWORD:-device-manager-front}
  DB_NAME: ${DB_FRONT_NAME:-device-manager-front}
  PUBLIC_API_URL: ${PUBLIC_API_URL}
  PUBLIC_URL: ${PUBLIC_URL}

x-api-server-settings: &api-server-settings
  DB_URL: jdbc:postgresql://postgres:5432/${DB_API_NAME:-device-manager-api}
  DB_PASSWORD: ${DB_API_PASSWORD:-device-manager-api}
  DB_USERNAME: ${DB_API_USER:-device-manager-api}

x-port-mapping: &port-mapping
  - ${PORT:-8080}:80

services:
  postgres:
    image: postgres:latest
    environment:
      <<: [*pg-db-credentials, *db-front-credentials, *db-api-credentials]
    volumes:
      - javaflavors-db-data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5

  web:
    image: javaflavors-front:latest
    build:
      context: web
      dockerfile: Dockerfile
    pull_policy: build
    expose:
      - "3000"
    environment:
      <<: [*oidc-settings, *web-server-settings]
      DB_HOST: postgres
      DB_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy

  api:
    image: javaflavors-api:latest
    build:
      context: api
      dockerfile: Dockerfile
    pull_policy: build
    expose:
      - "8080"
    environment:
      <<: [*oidc-settings, *api-server-settings]
    volumes:
      - javaflavors-media:/app/media
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports: *port-mapping
    depends_on:
      - web
      - api

volumes:
  javaflavors-db-data:
  javaflavors-media:
